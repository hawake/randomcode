package csv2vcftest;

/**
 *
 * @author hawake
 * @version 0.2
 * 
 * Released under the terms of the GNU General Public License version 3
 */

import csv2vcftest.io.DataBank;

import java.io.*;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.swing.*;

public class mainFrame extends javax.swing.JFrame {

    /** Creates new form mainFrame */
    public mainFrame() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fileChooser = new javax.swing.JFileChooser();
        btnSearchCSV = new javax.swing.JButton();
        txtNomeFile = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        btnExit = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnSearchCSV.setText("Search CSV file");
        btnSearchCSV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchCSVActionPerformed(evt);
            }
        });

        txtNomeFile.setText("Percorso file CSV");

        jButton1.setText("Extract VCF files");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        btnExit.setText("Exit");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtNomeFile, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSearchCSV, javax.swing.GroupLayout.DEFAULT_SIZE, 229, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(68, 68, 68)
                        .addComponent(btnExit)
                        .addGap(174, 174, 174))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSearchCSV, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNomeFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnExit)
                    .addComponent(jButton1))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSearchCSVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchCSVActionPerformed
        JustaFilter filter1 = new JustaFilter() ;
        
        fileChooser.setFileFilter( filter1 );
        int returnValue = fileChooser.showOpenDialog(this);
                    
        if (returnValue == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            
            // Copy the file name to the text box . . .
            txtNomeFile.setText( file.getAbsolutePath() );
            // . . . and load it in the text area . . .
        }
        
    }//GEN-LAST:event_btnSearchCSVActionPerformed

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        System.exit( 0 ) ;
    }//GEN-LAST:event_btnExitActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            lavora( txtNomeFile.getText() );
        } catch (FileNotFoundException ex) {
            Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(mainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(mainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(mainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(mainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                new mainFrame().setVisible(true);
            }
        });
    }
    
    protected static void lavora( String tf ) throws FileNotFoundException, IOException {
        File miofile = new File( tf ) ;
        FileReader fileReader = new FileReader( miofile ) ;
        BufferedReader in1 = new BufferedReader( fileReader ) ;
        
        String s ;
        
        numero_righe = 0 ;
        
        int i ;
        
        while ( ( s = in1.readLine() ) != null ) {
            if ( numero_righe > 0 ) {
                System.out.println( "Contenuto di s:" + s ) ;
                
                /*
                 * Un grande ringraziamento va a Flame_Alchemist e skary
                 * di HackerForum per l'aiuto che mi hanno dato!
                 */
                
                //db = s.split( ";" ) ;
                db = s.split( "(\";\")" ) ;
                
                db[0] = db[0].substring(1) ;
                db[db.length - 1] = db[db.length -1 ].substring( db[db.length - 1].length() ) ;
                
                creaVcf( db ) ;
                
                System.out.println( "\n\r" ) ;
            } /*else if ( numero_righe == 0 ) {
                JOptionPane.showMessageDialog( null, "Error! " + tf + " file is empty!" ) ;
            }*/
            numero_righe++ ;
        }
        
        System.out.println( "Number of contacts loaded: " + numero_righe ) ;
        
    }

    protected static void creaVcf( String [] record ) throws FileNotFoundException {
        if ( record.length >= 1 ) {
            if (  record[1].isEmpty() && record[3].isEmpty() )
                dtbnk.setOutputFile( "SENZANOME.vcf" ) ;
            else {
                dtbnk.setOutputFile( record[1] + record[3] + ".vcf" );
            }
        }

        if ( record.length >= 4 ) {
            
            dtbnk.WriteLine( "BEGIN:VCARD" ) ;
            dtbnk.WriteLine( "VERSION:2.1" ) ;

            dtbnk.WriteLine( "N:" + record[1] + ";" + record[3] ) ;

            // "13" maybe it depends on the smartphone model, needs more tests...
            if ( record.length >= 13 && !record[13].isEmpty() ) 
                dtbnk.WriteLine( "TEL;CELL:" + record[13] ) ;
            if ( record.length >= 14 && !record[14].isEmpty() ) 
                dtbnk.WriteLine( "TEL;VOICE:" + record[14] ) ;
            if ( record.length >= 16 && !record[16].isEmpty())
                dtbnk.WriteLine( "TEL;FAX:" + record[16] ) ;
            if ( record.length >= 0 && !record[0].isEmpty())
                dtbnk.WriteLine( "TITLE:" + record[0] );
            if ( record.length >= 15 && !record[15].isEmpty())
                dtbnk.WriteLine( "EMAIL:" + record[15] ) ;
            if ( !record[6].equals("") )
                dtbnk.WriteLine( "ORG: " + record[6] ) ;

            dtbnk.WriteLine( "END:VCARD" ) ;
        }
    }
    
    DefaultListModel dlm = new DefaultListModel() ;
    private static DataBank dtbnk = new DataBank() ;
    private static String [] db ;
    private static int numero_righe ;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnSearchCSV;
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.JButton jButton1;
    private javax.swing.JTextField txtNomeFile;
    // End of variables declaration//GEN-END:variables
}

class JustaFilter extends javax.swing.filechooser.FileFilter {
    @Override
    public boolean accept( File file ) {
        // Allow only directories, or files with ".csv" extension
        // (comma separated values text files)
        return file.isDirectory() || file.getAbsolutePath().endsWith( ".csv" ) ;
    }
    @Override
    public String getDescription() {
        // Extension description . . .
        return "CSV file (*.csv)" ;
    }
}